.TH PYTHONPOLYGON 3Y
.SH NAME
pythonpolygon \- Python interface to polygon library
.SH SYNOPSIS
.nf
import antelope.polygon as p
import antelope.datascope as ds

azi=145
a=p.windrose(azi)
    print "azi %d -> %s" % (azi,a)

db=ds.dbopen("/opt/antelope/local/data/database/BekannteGrenzen","r")
dist=p.distancetopolygon(db, 47, 16)
print "print %.3f degrees from (%.f/%.f)  " % (dist, 47,16)
dbf = p.inwhichpolygons(db, 47, 16)
for dbf.record in range(dbf.query(ds.dbRECORD_COUNT)):
    [pid,pname]=dbf.getv('pid','pname')
    print "found in %s (%d)" % (pname,pid)
.fi
.SH DESCRIPTION
Python interface to the polygon library

.SH OPTIONS
.SS inwhichpolygons
return database view with all polygons enclosing the point specified by \fBlat\fP and \fBlon\fP.
.SS windrose
return azimuthal direction in textual form 90->E, 135->SE and so on.
.SS distancetopolygon
return minimum distance to polygon(s) in a database
.SH "SEE ALSO"
.nf
antelope_python(3y), polygon(3)
.fi
.SH "BUGS AND CAVEATS"
This interface probably adds a few bugs to the polygon library.
Once I understand how the \fIbuplot\fP stuff 
works, I will add more functionality
.SH AUTHOR
Nikolaus Horn 2014, horn@zamg.ac.at
