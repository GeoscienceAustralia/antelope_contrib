.TH USGS2DB 1 
.SH NAME
usgs2db \- utility to retrieve earthquake feed from \fIUSGS\fP.
.SH SYNOPSIS
.nf
\fBusgs2db\fP [-v] [-a \fIauthor\fP]
      [-k \fIkeydbname\fP] [-u \fIfeed-url\fP] \fIdbname\fP
.fi
.SH DESCRIPTION
.I usgs2db reads USGS feeds in GeoJSON format and stores the event information in a database.
The program keeps track of event ids in a separate table and updates the output database if new information is available.
.br
.SH OPTIONS
.IP \-v
verbose flag
.IP -k keydname
name of database to keep track of origin ids. Since USGS IDs are a mixture of strings and integers, a separate table is needed.
The database must be in schema \fBidmatch1.0\fP or higher. The database is created upon startup if not originally existing. The databse name defaults to keydb.
.IP \-u
URL of the data source. A list of all available feeds can be found on a page of the \fIUSGS\fP
\fBhttp://earthquake.usgs.gov/earthquakes/feed/v1.0/geojson.php\fP
If not specified, this defaults to 
\fBhttp://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_day.geojson\fP
.IP \-a author
Author name for ievent, origin and netmag table. Defaults to NEIC
.IP database
The name of the output database. This argument is required.
.SH EXAMPLE
To retrieve all event data for the last month in database usgs:
.nf
usgs2db -k db/usgs_ids -v -u http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson usgs
.fi
To update event information every 10 minutes, add the following to your rtexec.pf
.nf
# update database USGS every 10 minutes, all events above magnitude 2.5
USGS   UTC   0,10,20,30,40,50   *  *  *  *  usgs2db -k db/usgs_ids db/usgs 

.fi
.SH ENVIRONMENT
The program uses the Python module \fIurllib2\fP to retrieve data from a webpage.
This module provides proxy support via environment variables like e.g.: http_proxy = http://myhost:myport.
If you need more control over proxy settings, feel free to contact the author, Nikolaus.Horn@zamg.ac.at.
.SH "SEE ALSO"
.nf

pydoc liburl2, antelope_python(3y)

.fi
.SH "BUGS AND CAVEATS"
The error handling is very basic. I implemented my personal understanding of the data offered. There might be wiser ways to use the save the information in a database.
The feeds are subject to the feed life cycle policy as explained on the website of the usgs. See there for more information if a feed stops working.
This module uses the python modules urllib2 and json with all their bugs. And of course I added many more problems...
.SH AUTHOR
Nikolaus Horn (nikolaus.horn@zamg.ac.at)
